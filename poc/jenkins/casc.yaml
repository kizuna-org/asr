# jenkins/casc.yaml
credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "${GITEA_CREDENTIALS_ID}"
              username: "${GITEA_USER}"
              password: "${GITEA_PASS}"
              description: "Gitea credentials for JCasC"

jobs:
  - script: >
      multibranchPipelineJob('gitea-poc-multibranch') {
        description('Job created by Jenkins as Code - Using Git branch source for Gitea')
        branchSources {
          git {
            id('gitea-git-source')
            remote("${GITEA_API_URL}/${GITEA_USER}/${GITEA_REPO}.git")
            credentialsId("${GITEA_CREDENTIALS_ID}")
            traits {
              // ブランチを検出
              gitBranchDiscovery()
              // 必要に応じてPull Requestを検出
              // gitTagDiscovery()
            }
          }
        }
        configure { node ->
          // Giteaのwebhookサポートを有効化
          def traits = node / 'sources' / 'data' / 'jenkins.branch.BranchSource' / 'source' / 'traits'
          traits << 'jenkins.plugins.git.traits.RefSpecsSCMSourceTrait' {
            templates {
              'jenkins.plugins.git.traits.RefSpecsSCMSourceTrait_-RefSpecTemplate' {
                value('+refs/heads/*:refs/remotes/@{remote}/*')
              }
            }
          }
        }
        orphanedItemStrategy {
          pruneDeadBranches(true)
          daysToKeep(7)
          numToKeep(10)
        }
        factory {
          workflowBranchProjectFactory {
            scriptPath('Jenkinsfile')
          }
        }
      }
